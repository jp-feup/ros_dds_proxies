//******************************************************************
// 
//  Generated by IDL to C++ Translator
//  
//  File name: HeaderDcps.cpp
//  Source: HeaderDcps.idl
//  Generated: Mon Aug  6 04:08:22 2012
//  OpenSplice V5.5.1OSS
//  
//******************************************************************

#include "HeaderDcps.h"

#if DDS_USE_EXPLICIT_TEMPLATES
template class DDS_DCPSUVLSeq < Header, struct HeaderSeq_uniq_>;
#endif

const char * HeaderTypeSupportInterface::_local_id = "IDL:HeaderTypeSupportInterface:1.0";

HeaderTypeSupportInterface_ptr HeaderTypeSupportInterface::_duplicate (HeaderTypeSupportInterface_ptr p)
{
   if (p) p->m_count++;
   return p;
}

DDS::Boolean HeaderTypeSupportInterface::_local_is_a (const char * _id)
{
   if (strcmp (_id, HeaderTypeSupportInterface::_local_id) == 0)
   {
      return true;
   }

   typedef DDS::TypeSupport NestedBase_1;

   if (NestedBase_1::_local_is_a (_id))
   {
      return true;
   }

   return false;
}

HeaderTypeSupportInterface_ptr HeaderTypeSupportInterface::_narrow (DDS::Object_ptr p)
{
   HeaderTypeSupportInterface_ptr result = NULL;
   if (p && p->_is_a (HeaderTypeSupportInterface::_local_id))
   {
      result = dynamic_cast < HeaderTypeSupportInterface_ptr> (p);
      result->m_count++;
   }
   return result;
}

HeaderTypeSupportInterface_ptr HeaderTypeSupportInterface::_unchecked_narrow (DDS::Object_ptr p)
{
   HeaderTypeSupportInterface_ptr result;
   result = dynamic_cast < HeaderTypeSupportInterface_ptr> (p);
   result->m_count++;
   return result;
}

const char * HeaderDataWriter::_local_id = "IDL:HeaderDataWriter:1.0";

HeaderDataWriter_ptr HeaderDataWriter::_duplicate (HeaderDataWriter_ptr p)
{
   if (p) p->m_count++;
   return p;
}

DDS::Boolean HeaderDataWriter::_local_is_a (const char * _id)
{
   if (strcmp (_id, HeaderDataWriter::_local_id) == 0)
   {
      return true;
   }

   typedef DDS::DataWriter NestedBase_1;

   if (NestedBase_1::_local_is_a (_id))
   {
      return true;
   }

   return false;
}

HeaderDataWriter_ptr HeaderDataWriter::_narrow (DDS::Object_ptr p)
{
   HeaderDataWriter_ptr result = NULL;
   if (p && p->_is_a (HeaderDataWriter::_local_id))
   {
      result = dynamic_cast < HeaderDataWriter_ptr> (p);
      result->m_count++;
   }
   return result;
}

HeaderDataWriter_ptr HeaderDataWriter::_unchecked_narrow (DDS::Object_ptr p)
{
   HeaderDataWriter_ptr result;
   result = dynamic_cast < HeaderDataWriter_ptr> (p);
   result->m_count++;
   return result;
}

const char * HeaderDataReader::_local_id = "IDL:HeaderDataReader:1.0";

HeaderDataReader_ptr HeaderDataReader::_duplicate (HeaderDataReader_ptr p)
{
   if (p) p->m_count++;
   return p;
}

DDS::Boolean HeaderDataReader::_local_is_a (const char * _id)
{
   if (strcmp (_id, HeaderDataReader::_local_id) == 0)
   {
      return true;
   }

   typedef DDS::DataReader NestedBase_1;

   if (NestedBase_1::_local_is_a (_id))
   {
      return true;
   }

   return false;
}

HeaderDataReader_ptr HeaderDataReader::_narrow (DDS::Object_ptr p)
{
   HeaderDataReader_ptr result = NULL;
   if (p && p->_is_a (HeaderDataReader::_local_id))
   {
      result = dynamic_cast < HeaderDataReader_ptr> (p);
      result->m_count++;
   }
   return result;
}

HeaderDataReader_ptr HeaderDataReader::_unchecked_narrow (DDS::Object_ptr p)
{
   HeaderDataReader_ptr result;
   result = dynamic_cast < HeaderDataReader_ptr> (p);
   result->m_count++;
   return result;
}

const char * HeaderDataReaderView::_local_id = "IDL:HeaderDataReaderView:1.0";

HeaderDataReaderView_ptr HeaderDataReaderView::_duplicate (HeaderDataReaderView_ptr p)
{
   if (p) p->m_count++;
   return p;
}

DDS::Boolean HeaderDataReaderView::_local_is_a (const char * _id)
{
   if (strcmp (_id, HeaderDataReaderView::_local_id) == 0)
   {
      return true;
   }

   typedef DDS::DataReaderView NestedBase_1;

   if (NestedBase_1::_local_is_a (_id))
   {
      return true;
   }

   return false;
}

HeaderDataReaderView_ptr HeaderDataReaderView::_narrow (DDS::Object_ptr p)
{
   HeaderDataReaderView_ptr result = NULL;
   if (p && p->_is_a (HeaderDataReaderView::_local_id))
   {
      result = dynamic_cast < HeaderDataReaderView_ptr> (p);
      result->m_count++;
   }
   return result;
}

HeaderDataReaderView_ptr HeaderDataReaderView::_unchecked_narrow (DDS::Object_ptr p)
{
   HeaderDataReaderView_ptr result;
   result = dynamic_cast < HeaderDataReaderView_ptr> (p);
   result->m_count++;
   return result;
}



