//******************************************************************
// 
//  Generated by IDL to C++ Translator
//  
//  File name: proxyPoseWithCovarianceStampedDcps.cpp
//  Source: proxyPoseWithCovarianceStampedDcps.idl
//  Generated: Thu Jul 26 18:00:33 2012
//  OpenSplice V5.5.1OSS
//  
//******************************************************************

#include "proxyPoseWithCovarianceStampedDcps.h"

#if DDS_USE_EXPLICIT_TEMPLATES
template class DDS_DCPSUVLSeq < proxyPoseWithCovarianceStamped, struct proxyPoseWithCovarianceStampedSeq_uniq_>;
#endif

const char * proxyPoseWithCovarianceStampedTypeSupportInterface::_local_id = "IDL:proxyPoseWithCovarianceStampedTypeSupportInterface:1.0";

proxyPoseWithCovarianceStampedTypeSupportInterface_ptr proxyPoseWithCovarianceStampedTypeSupportInterface::_duplicate (proxyPoseWithCovarianceStampedTypeSupportInterface_ptr p)
{
   if (p) p->m_count++;
   return p;
}

DDS::Boolean proxyPoseWithCovarianceStampedTypeSupportInterface::_local_is_a (const char * _id)
{
   if (strcmp (_id, proxyPoseWithCovarianceStampedTypeSupportInterface::_local_id) == 0)
   {
      return true;
   }

   typedef DDS::TypeSupport NestedBase_1;

   if (NestedBase_1::_local_is_a (_id))
   {
      return true;
   }

   return false;
}

proxyPoseWithCovarianceStampedTypeSupportInterface_ptr proxyPoseWithCovarianceStampedTypeSupportInterface::_narrow (DDS::Object_ptr p)
{
   proxyPoseWithCovarianceStampedTypeSupportInterface_ptr result = NULL;
   if (p && p->_is_a (proxyPoseWithCovarianceStampedTypeSupportInterface::_local_id))
   {
      result = dynamic_cast < proxyPoseWithCovarianceStampedTypeSupportInterface_ptr> (p);
      result->m_count++;
   }
   return result;
}

proxyPoseWithCovarianceStampedTypeSupportInterface_ptr proxyPoseWithCovarianceStampedTypeSupportInterface::_unchecked_narrow (DDS::Object_ptr p)
{
   proxyPoseWithCovarianceStampedTypeSupportInterface_ptr result;
   result = dynamic_cast < proxyPoseWithCovarianceStampedTypeSupportInterface_ptr> (p);
   result->m_count++;
   return result;
}

const char * proxyPoseWithCovarianceStampedDataWriter::_local_id = "IDL:proxyPoseWithCovarianceStampedDataWriter:1.0";

proxyPoseWithCovarianceStampedDataWriter_ptr proxyPoseWithCovarianceStampedDataWriter::_duplicate (proxyPoseWithCovarianceStampedDataWriter_ptr p)
{
   if (p) p->m_count++;
   return p;
}

DDS::Boolean proxyPoseWithCovarianceStampedDataWriter::_local_is_a (const char * _id)
{
   if (strcmp (_id, proxyPoseWithCovarianceStampedDataWriter::_local_id) == 0)
   {
      return true;
   }

   typedef DDS::DataWriter NestedBase_1;

   if (NestedBase_1::_local_is_a (_id))
   {
      return true;
   }

   return false;
}

proxyPoseWithCovarianceStampedDataWriter_ptr proxyPoseWithCovarianceStampedDataWriter::_narrow (DDS::Object_ptr p)
{
   proxyPoseWithCovarianceStampedDataWriter_ptr result = NULL;
   if (p && p->_is_a (proxyPoseWithCovarianceStampedDataWriter::_local_id))
   {
      result = dynamic_cast < proxyPoseWithCovarianceStampedDataWriter_ptr> (p);
      result->m_count++;
   }
   return result;
}

proxyPoseWithCovarianceStampedDataWriter_ptr proxyPoseWithCovarianceStampedDataWriter::_unchecked_narrow (DDS::Object_ptr p)
{
   proxyPoseWithCovarianceStampedDataWriter_ptr result;
   result = dynamic_cast < proxyPoseWithCovarianceStampedDataWriter_ptr> (p);
   result->m_count++;
   return result;
}

const char * proxyPoseWithCovarianceStampedDataReader::_local_id = "IDL:proxyPoseWithCovarianceStampedDataReader:1.0";

proxyPoseWithCovarianceStampedDataReader_ptr proxyPoseWithCovarianceStampedDataReader::_duplicate (proxyPoseWithCovarianceStampedDataReader_ptr p)
{
   if (p) p->m_count++;
   return p;
}

DDS::Boolean proxyPoseWithCovarianceStampedDataReader::_local_is_a (const char * _id)
{
   if (strcmp (_id, proxyPoseWithCovarianceStampedDataReader::_local_id) == 0)
   {
      return true;
   }

   typedef DDS::DataReader NestedBase_1;

   if (NestedBase_1::_local_is_a (_id))
   {
      return true;
   }

   return false;
}

proxyPoseWithCovarianceStampedDataReader_ptr proxyPoseWithCovarianceStampedDataReader::_narrow (DDS::Object_ptr p)
{
   proxyPoseWithCovarianceStampedDataReader_ptr result = NULL;
   if (p && p->_is_a (proxyPoseWithCovarianceStampedDataReader::_local_id))
   {
      result = dynamic_cast < proxyPoseWithCovarianceStampedDataReader_ptr> (p);
      result->m_count++;
   }
   return result;
}

proxyPoseWithCovarianceStampedDataReader_ptr proxyPoseWithCovarianceStampedDataReader::_unchecked_narrow (DDS::Object_ptr p)
{
   proxyPoseWithCovarianceStampedDataReader_ptr result;
   result = dynamic_cast < proxyPoseWithCovarianceStampedDataReader_ptr> (p);
   result->m_count++;
   return result;
}

const char * proxyPoseWithCovarianceStampedDataReaderView::_local_id = "IDL:proxyPoseWithCovarianceStampedDataReaderView:1.0";

proxyPoseWithCovarianceStampedDataReaderView_ptr proxyPoseWithCovarianceStampedDataReaderView::_duplicate (proxyPoseWithCovarianceStampedDataReaderView_ptr p)
{
   if (p) p->m_count++;
   return p;
}

DDS::Boolean proxyPoseWithCovarianceStampedDataReaderView::_local_is_a (const char * _id)
{
   if (strcmp (_id, proxyPoseWithCovarianceStampedDataReaderView::_local_id) == 0)
   {
      return true;
   }

   typedef DDS::DataReaderView NestedBase_1;

   if (NestedBase_1::_local_is_a (_id))
   {
      return true;
   }

   return false;
}

proxyPoseWithCovarianceStampedDataReaderView_ptr proxyPoseWithCovarianceStampedDataReaderView::_narrow (DDS::Object_ptr p)
{
   proxyPoseWithCovarianceStampedDataReaderView_ptr result = NULL;
   if (p && p->_is_a (proxyPoseWithCovarianceStampedDataReaderView::_local_id))
   {
      result = dynamic_cast < proxyPoseWithCovarianceStampedDataReaderView_ptr> (p);
      result->m_count++;
   }
   return result;
}

proxyPoseWithCovarianceStampedDataReaderView_ptr proxyPoseWithCovarianceStampedDataReaderView::_unchecked_narrow (DDS::Object_ptr p)
{
   proxyPoseWithCovarianceStampedDataReaderView_ptr result;
   result = dynamic_cast < proxyPoseWithCovarianceStampedDataReaderView_ptr> (p);
   result->m_count++;
   return result;
}



