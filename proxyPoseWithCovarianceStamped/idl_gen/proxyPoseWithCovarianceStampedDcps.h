//******************************************************************
// 
//  Generated by IDL to C++ Translator
//  
//  File name: proxyPoseWithCovarianceStampedDcps.h
//  Source: proxyPoseWithCovarianceStampedDcps.idl
//  Generated: Thu Jul 26 18:00:33 2012
//  OpenSplice V5.5.1OSS
//  
//******************************************************************
#ifndef _PROXYPOSEWITHCOVARIANCESTAMPEDDCPS_H_
#define _PROXYPOSEWITHCOVARIANCESTAMPEDDCPS_H_

#include "sacpp_mapping.h"
#include "sacpp_DDS_DCPS.h"
#include "Quaternion.h"
#include "dds_dcps_builtintopics.h"
#include "Pose.h"
#include "PoseWithCovariance.h"
#include "proxyPoseWithCovarianceStamped.h"
#include "dds_builtinTopics.h"
#include "Point.h"
#include "Time.h"
#include "dds_dcps_interfaces.h"
#include "Header.h"
struct Time;
struct Header;
struct Point;
struct Quaternion;
struct Pose;
struct PoseWithCovariance;
struct proxyPoseWithCovarianceStamped;

class proxyPoseWithCovarianceStampedTypeSupportInterface;

typedef proxyPoseWithCovarianceStampedTypeSupportInterface * proxyPoseWithCovarianceStampedTypeSupportInterface_ptr;
typedef DDS_DCPSInterface_var < proxyPoseWithCovarianceStampedTypeSupportInterface> proxyPoseWithCovarianceStampedTypeSupportInterface_var;
typedef DDS_DCPSInterface_out < proxyPoseWithCovarianceStampedTypeSupportInterface> proxyPoseWithCovarianceStampedTypeSupportInterface_out;


class proxyPoseWithCovarianceStampedDataWriter;

typedef proxyPoseWithCovarianceStampedDataWriter * proxyPoseWithCovarianceStampedDataWriter_ptr;
typedef DDS_DCPSInterface_var < proxyPoseWithCovarianceStampedDataWriter> proxyPoseWithCovarianceStampedDataWriter_var;
typedef DDS_DCPSInterface_out < proxyPoseWithCovarianceStampedDataWriter> proxyPoseWithCovarianceStampedDataWriter_out;


class proxyPoseWithCovarianceStampedDataReader;

typedef proxyPoseWithCovarianceStampedDataReader * proxyPoseWithCovarianceStampedDataReader_ptr;
typedef DDS_DCPSInterface_var < proxyPoseWithCovarianceStampedDataReader> proxyPoseWithCovarianceStampedDataReader_var;
typedef DDS_DCPSInterface_out < proxyPoseWithCovarianceStampedDataReader> proxyPoseWithCovarianceStampedDataReader_out;


class proxyPoseWithCovarianceStampedDataReaderView;

typedef proxyPoseWithCovarianceStampedDataReaderView * proxyPoseWithCovarianceStampedDataReaderView_ptr;
typedef DDS_DCPSInterface_var < proxyPoseWithCovarianceStampedDataReaderView> proxyPoseWithCovarianceStampedDataReaderView_var;
typedef DDS_DCPSInterface_out < proxyPoseWithCovarianceStampedDataReaderView> proxyPoseWithCovarianceStampedDataReaderView_out;


struct proxyPoseWithCovarianceStampedSeq_uniq_ {};
typedef DDS_DCPSUVLSeq < proxyPoseWithCovarianceStamped, struct proxyPoseWithCovarianceStampedSeq_uniq_> proxyPoseWithCovarianceStampedSeq;
typedef DDS_DCPSSequence_var < proxyPoseWithCovarianceStampedSeq> proxyPoseWithCovarianceStampedSeq_var;
typedef DDS_DCPSSequence_out < proxyPoseWithCovarianceStampedSeq> proxyPoseWithCovarianceStampedSeq_out;
class proxyPoseWithCovarianceStampedTypeSupportInterface
:
   virtual public DDS::TypeSupport
{ 
public:
   typedef proxyPoseWithCovarianceStampedTypeSupportInterface_ptr _ptr_type;
   typedef proxyPoseWithCovarianceStampedTypeSupportInterface_var _var_type;

   static proxyPoseWithCovarianceStampedTypeSupportInterface_ptr _duplicate (proxyPoseWithCovarianceStampedTypeSupportInterface_ptr obj);
   DDS::Boolean _local_is_a (const char * id);

   static proxyPoseWithCovarianceStampedTypeSupportInterface_ptr _narrow (DDS::Object_ptr obj);
   static proxyPoseWithCovarianceStampedTypeSupportInterface_ptr _unchecked_narrow (DDS::Object_ptr obj);
   static proxyPoseWithCovarianceStampedTypeSupportInterface_ptr _nil () { return 0; }
   static const char * _local_id;
   proxyPoseWithCovarianceStampedTypeSupportInterface_ptr _this () { return this; }


protected:
   proxyPoseWithCovarianceStampedTypeSupportInterface () {};
   ~proxyPoseWithCovarianceStampedTypeSupportInterface () {};
private:
   proxyPoseWithCovarianceStampedTypeSupportInterface (const proxyPoseWithCovarianceStampedTypeSupportInterface &);
   proxyPoseWithCovarianceStampedTypeSupportInterface & operator = (const proxyPoseWithCovarianceStampedTypeSupportInterface &);
};

class proxyPoseWithCovarianceStampedDataWriter
:
   virtual public DDS::DataWriter
{ 
public:
   typedef proxyPoseWithCovarianceStampedDataWriter_ptr _ptr_type;
   typedef proxyPoseWithCovarianceStampedDataWriter_var _var_type;

   static proxyPoseWithCovarianceStampedDataWriter_ptr _duplicate (proxyPoseWithCovarianceStampedDataWriter_ptr obj);
   DDS::Boolean _local_is_a (const char * id);

   static proxyPoseWithCovarianceStampedDataWriter_ptr _narrow (DDS::Object_ptr obj);
   static proxyPoseWithCovarianceStampedDataWriter_ptr _unchecked_narrow (DDS::Object_ptr obj);
   static proxyPoseWithCovarianceStampedDataWriter_ptr _nil () { return 0; }
   static const char * _local_id;
   proxyPoseWithCovarianceStampedDataWriter_ptr _this () { return this; }

   virtual DDS::InstanceHandle_t register_instance (const proxyPoseWithCovarianceStamped& instance_data) = 0;
   virtual DDS::InstanceHandle_t register_instance_w_timestamp (const proxyPoseWithCovarianceStamped& instance_data, const DDS::Time_t& source_timestamp) = 0;
   virtual DDS::ReturnCode_t unregister_instance (const proxyPoseWithCovarianceStamped& instance_data, DDS::InstanceHandle_t handle) = 0;
   virtual DDS::ReturnCode_t unregister_instance_w_timestamp (const proxyPoseWithCovarianceStamped& instance_data, DDS::InstanceHandle_t handle, const DDS::Time_t& source_timestamp) = 0;
   virtual DDS::ReturnCode_t write (const proxyPoseWithCovarianceStamped& instance_data, DDS::InstanceHandle_t handle) = 0;
   virtual DDS::ReturnCode_t write_w_timestamp (const proxyPoseWithCovarianceStamped& instance_data, DDS::InstanceHandle_t handle, const DDS::Time_t& source_timestamp) = 0;
   virtual DDS::ReturnCode_t dispose (const proxyPoseWithCovarianceStamped& instance_data, DDS::InstanceHandle_t handle) = 0;
   virtual DDS::ReturnCode_t dispose_w_timestamp (const proxyPoseWithCovarianceStamped& instance_data, DDS::InstanceHandle_t handle, const DDS::Time_t& source_timestamp) = 0;
   virtual DDS::ReturnCode_t writedispose (const proxyPoseWithCovarianceStamped& instance_data, DDS::InstanceHandle_t handle) = 0;
   virtual DDS::ReturnCode_t writedispose_w_timestamp (const proxyPoseWithCovarianceStamped& instance_data, DDS::InstanceHandle_t handle, const DDS::Time_t& source_timestamp) = 0;
   virtual DDS::ReturnCode_t get_key_value (proxyPoseWithCovarianceStamped& key_holder, DDS::InstanceHandle_t handle) = 0;
   virtual DDS::InstanceHandle_t lookup_instance (const proxyPoseWithCovarianceStamped& instance_data) = 0;

protected:
   proxyPoseWithCovarianceStampedDataWriter () {};
   ~proxyPoseWithCovarianceStampedDataWriter () {};
private:
   proxyPoseWithCovarianceStampedDataWriter (const proxyPoseWithCovarianceStampedDataWriter &);
   proxyPoseWithCovarianceStampedDataWriter & operator = (const proxyPoseWithCovarianceStampedDataWriter &);
};

class proxyPoseWithCovarianceStampedDataReader
:
   virtual public DDS::DataReader
{ 
public:
   typedef proxyPoseWithCovarianceStampedDataReader_ptr _ptr_type;
   typedef proxyPoseWithCovarianceStampedDataReader_var _var_type;

   static proxyPoseWithCovarianceStampedDataReader_ptr _duplicate (proxyPoseWithCovarianceStampedDataReader_ptr obj);
   DDS::Boolean _local_is_a (const char * id);

   static proxyPoseWithCovarianceStampedDataReader_ptr _narrow (DDS::Object_ptr obj);
   static proxyPoseWithCovarianceStampedDataReader_ptr _unchecked_narrow (DDS::Object_ptr obj);
   static proxyPoseWithCovarianceStampedDataReader_ptr _nil () { return 0; }
   static const char * _local_id;
   proxyPoseWithCovarianceStampedDataReader_ptr _this () { return this; }

   virtual DDS::ReturnCode_t read (proxyPoseWithCovarianceStampedSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::SampleStateMask sample_states, DDS::ViewStateMask view_states, DDS::InstanceStateMask instance_states) = 0;
   virtual DDS::ReturnCode_t take (proxyPoseWithCovarianceStampedSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::SampleStateMask sample_states, DDS::ViewStateMask view_states, DDS::InstanceStateMask instance_states) = 0;
   virtual DDS::ReturnCode_t read_w_condition (proxyPoseWithCovarianceStampedSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::ReadCondition_ptr a_condition) = 0;
   virtual DDS::ReturnCode_t take_w_condition (proxyPoseWithCovarianceStampedSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::ReadCondition_ptr a_condition) = 0;
   virtual DDS::ReturnCode_t read_next_sample (proxyPoseWithCovarianceStamped& received_data, DDS::SampleInfo& sample_info) = 0;
   virtual DDS::ReturnCode_t take_next_sample (proxyPoseWithCovarianceStamped& received_data, DDS::SampleInfo& sample_info) = 0;
   virtual DDS::ReturnCode_t read_instance (proxyPoseWithCovarianceStampedSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::InstanceHandle_t a_handle, DDS::SampleStateMask sample_states, DDS::ViewStateMask view_states, DDS::InstanceStateMask instance_states) = 0;
   virtual DDS::ReturnCode_t take_instance (proxyPoseWithCovarianceStampedSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::InstanceHandle_t a_handle, DDS::SampleStateMask sample_states, DDS::ViewStateMask view_states, DDS::InstanceStateMask instance_states) = 0;
   virtual DDS::ReturnCode_t read_next_instance (proxyPoseWithCovarianceStampedSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::InstanceHandle_t a_handle, DDS::SampleStateMask sample_states, DDS::ViewStateMask view_states, DDS::InstanceStateMask instance_states) = 0;
   virtual DDS::ReturnCode_t take_next_instance (proxyPoseWithCovarianceStampedSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::InstanceHandle_t a_handle, DDS::SampleStateMask sample_states, DDS::ViewStateMask view_states, DDS::InstanceStateMask instance_states) = 0;
   virtual DDS::ReturnCode_t read_next_instance_w_condition (proxyPoseWithCovarianceStampedSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::InstanceHandle_t a_handle, DDS::ReadCondition_ptr a_condition) = 0;
   virtual DDS::ReturnCode_t take_next_instance_w_condition (proxyPoseWithCovarianceStampedSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::InstanceHandle_t a_handle, DDS::ReadCondition_ptr a_condition) = 0;
   virtual DDS::ReturnCode_t return_loan (proxyPoseWithCovarianceStampedSeq& received_data, DDS::SampleInfoSeq& info_seq) = 0;
   virtual DDS::ReturnCode_t get_key_value (proxyPoseWithCovarianceStamped& key_holder, DDS::InstanceHandle_t handle) = 0;
   virtual DDS::InstanceHandle_t lookup_instance (const proxyPoseWithCovarianceStamped& instance) = 0;

protected:
   proxyPoseWithCovarianceStampedDataReader () {};
   ~proxyPoseWithCovarianceStampedDataReader () {};
private:
   proxyPoseWithCovarianceStampedDataReader (const proxyPoseWithCovarianceStampedDataReader &);
   proxyPoseWithCovarianceStampedDataReader & operator = (const proxyPoseWithCovarianceStampedDataReader &);
};

class proxyPoseWithCovarianceStampedDataReaderView
:
   virtual public DDS::DataReaderView
{ 
public:
   typedef proxyPoseWithCovarianceStampedDataReaderView_ptr _ptr_type;
   typedef proxyPoseWithCovarianceStampedDataReaderView_var _var_type;

   static proxyPoseWithCovarianceStampedDataReaderView_ptr _duplicate (proxyPoseWithCovarianceStampedDataReaderView_ptr obj);
   DDS::Boolean _local_is_a (const char * id);

   static proxyPoseWithCovarianceStampedDataReaderView_ptr _narrow (DDS::Object_ptr obj);
   static proxyPoseWithCovarianceStampedDataReaderView_ptr _unchecked_narrow (DDS::Object_ptr obj);
   static proxyPoseWithCovarianceStampedDataReaderView_ptr _nil () { return 0; }
   static const char * _local_id;
   proxyPoseWithCovarianceStampedDataReaderView_ptr _this () { return this; }

   virtual DDS::ReturnCode_t read (proxyPoseWithCovarianceStampedSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::SampleStateMask sample_states, DDS::ViewStateMask view_states, DDS::InstanceStateMask instance_states) = 0;
   virtual DDS::ReturnCode_t take (proxyPoseWithCovarianceStampedSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::SampleStateMask sample_states, DDS::ViewStateMask view_states, DDS::InstanceStateMask instance_states) = 0;
   virtual DDS::ReturnCode_t read_w_condition (proxyPoseWithCovarianceStampedSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::ReadCondition_ptr a_condition) = 0;
   virtual DDS::ReturnCode_t take_w_condition (proxyPoseWithCovarianceStampedSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::ReadCondition_ptr a_condition) = 0;
   virtual DDS::ReturnCode_t read_next_sample (proxyPoseWithCovarianceStamped& received_data, DDS::SampleInfo& sample_info) = 0;
   virtual DDS::ReturnCode_t take_next_sample (proxyPoseWithCovarianceStamped& received_data, DDS::SampleInfo& sample_info) = 0;
   virtual DDS::ReturnCode_t read_instance (proxyPoseWithCovarianceStampedSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::InstanceHandle_t a_handle, DDS::SampleStateMask sample_states, DDS::ViewStateMask view_states, DDS::InstanceStateMask instance_states) = 0;
   virtual DDS::ReturnCode_t take_instance (proxyPoseWithCovarianceStampedSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::InstanceHandle_t a_handle, DDS::SampleStateMask sample_states, DDS::ViewStateMask view_states, DDS::InstanceStateMask instance_states) = 0;
   virtual DDS::ReturnCode_t read_next_instance (proxyPoseWithCovarianceStampedSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::InstanceHandle_t a_handle, DDS::SampleStateMask sample_states, DDS::ViewStateMask view_states, DDS::InstanceStateMask instance_states) = 0;
   virtual DDS::ReturnCode_t take_next_instance (proxyPoseWithCovarianceStampedSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::InstanceHandle_t a_handle, DDS::SampleStateMask sample_states, DDS::ViewStateMask view_states, DDS::InstanceStateMask instance_states) = 0;
   virtual DDS::ReturnCode_t read_next_instance_w_condition (proxyPoseWithCovarianceStampedSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::InstanceHandle_t a_handle, DDS::ReadCondition_ptr a_condition) = 0;
   virtual DDS::ReturnCode_t take_next_instance_w_condition (proxyPoseWithCovarianceStampedSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::InstanceHandle_t a_handle, DDS::ReadCondition_ptr a_condition) = 0;
   virtual DDS::ReturnCode_t return_loan (proxyPoseWithCovarianceStampedSeq& received_data, DDS::SampleInfoSeq& info_seq) = 0;
   virtual DDS::ReturnCode_t get_key_value (proxyPoseWithCovarianceStamped& key_holder, DDS::InstanceHandle_t handle) = 0;
   virtual DDS::InstanceHandle_t lookup_instance (const proxyPoseWithCovarianceStamped& instance) = 0;

protected:
   proxyPoseWithCovarianceStampedDataReaderView () {};
   ~proxyPoseWithCovarianceStampedDataReaderView () {};
private:
   proxyPoseWithCovarianceStampedDataReaderView (const proxyPoseWithCovarianceStampedDataReaderView &);
   proxyPoseWithCovarianceStampedDataReaderView & operator = (const proxyPoseWithCovarianceStampedDataReaderView &);
};

template <>
DDS::BuiltinTopicKey_t_slice* DDS_DCPS_ArrayHelper < DDS::BuiltinTopicKey_t, DDS::BuiltinTopicKey_t_slice, DDS::BuiltinTopicKey_t_uniq_>::alloc ();
template <>
void DDS_DCPS_ArrayHelper < DDS::BuiltinTopicKey_t, DDS::BuiltinTopicKey_t_slice, DDS::BuiltinTopicKey_t_uniq_>::copy (DDS::BuiltinTopicKey_t_slice *to, const DDS::BuiltinTopicKey_t_slice* from);
template <>
void DDS_DCPS_ArrayHelper < DDS::BuiltinTopicKey_t, DDS::BuiltinTopicKey_t_slice, DDS::BuiltinTopicKey_t_uniq_>::free (DDS::BuiltinTopicKey_t_slice *ptr);




#endif 
