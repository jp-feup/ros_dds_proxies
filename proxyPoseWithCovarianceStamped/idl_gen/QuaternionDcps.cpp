//******************************************************************
// 
//  Generated by IDL to C++ Translator
//  
//  File name: QuaternionDcps.cpp
//  Source: QuaternionDcps.idl
//  Generated: Fri Jul 27 15:39:03 2012
//  OpenSplice V5.5.1OSS
//  
//******************************************************************

#include "QuaternionDcps.h"

#if DDS_USE_EXPLICIT_TEMPLATES
template class DDS_DCPSUFLSeq < Quaternion, struct QuaternionSeq_uniq_>;
#endif

const char * QuaternionTypeSupportInterface::_local_id = "IDL:QuaternionTypeSupportInterface:1.0";

QuaternionTypeSupportInterface_ptr QuaternionTypeSupportInterface::_duplicate (QuaternionTypeSupportInterface_ptr p)
{
   if (p) p->m_count++;
   return p;
}

DDS::Boolean QuaternionTypeSupportInterface::_local_is_a (const char * _id)
{
   if (strcmp (_id, QuaternionTypeSupportInterface::_local_id) == 0)
   {
      return true;
   }

   typedef DDS::TypeSupport NestedBase_1;

   if (NestedBase_1::_local_is_a (_id))
   {
      return true;
   }

   return false;
}

QuaternionTypeSupportInterface_ptr QuaternionTypeSupportInterface::_narrow (DDS::Object_ptr p)
{
   QuaternionTypeSupportInterface_ptr result = NULL;
   if (p && p->_is_a (QuaternionTypeSupportInterface::_local_id))
   {
      result = dynamic_cast < QuaternionTypeSupportInterface_ptr> (p);
      result->m_count++;
   }
   return result;
}

QuaternionTypeSupportInterface_ptr QuaternionTypeSupportInterface::_unchecked_narrow (DDS::Object_ptr p)
{
   QuaternionTypeSupportInterface_ptr result;
   result = dynamic_cast < QuaternionTypeSupportInterface_ptr> (p);
   result->m_count++;
   return result;
}

const char * QuaternionDataWriter::_local_id = "IDL:QuaternionDataWriter:1.0";

QuaternionDataWriter_ptr QuaternionDataWriter::_duplicate (QuaternionDataWriter_ptr p)
{
   if (p) p->m_count++;
   return p;
}

DDS::Boolean QuaternionDataWriter::_local_is_a (const char * _id)
{
   if (strcmp (_id, QuaternionDataWriter::_local_id) == 0)
   {
      return true;
   }

   typedef DDS::DataWriter NestedBase_1;

   if (NestedBase_1::_local_is_a (_id))
   {
      return true;
   }

   return false;
}

QuaternionDataWriter_ptr QuaternionDataWriter::_narrow (DDS::Object_ptr p)
{
   QuaternionDataWriter_ptr result = NULL;
   if (p && p->_is_a (QuaternionDataWriter::_local_id))
   {
      result = dynamic_cast < QuaternionDataWriter_ptr> (p);
      result->m_count++;
   }
   return result;
}

QuaternionDataWriter_ptr QuaternionDataWriter::_unchecked_narrow (DDS::Object_ptr p)
{
   QuaternionDataWriter_ptr result;
   result = dynamic_cast < QuaternionDataWriter_ptr> (p);
   result->m_count++;
   return result;
}

const char * QuaternionDataReader::_local_id = "IDL:QuaternionDataReader:1.0";

QuaternionDataReader_ptr QuaternionDataReader::_duplicate (QuaternionDataReader_ptr p)
{
   if (p) p->m_count++;
   return p;
}

DDS::Boolean QuaternionDataReader::_local_is_a (const char * _id)
{
   if (strcmp (_id, QuaternionDataReader::_local_id) == 0)
   {
      return true;
   }

   typedef DDS::DataReader NestedBase_1;

   if (NestedBase_1::_local_is_a (_id))
   {
      return true;
   }

   return false;
}

QuaternionDataReader_ptr QuaternionDataReader::_narrow (DDS::Object_ptr p)
{
   QuaternionDataReader_ptr result = NULL;
   if (p && p->_is_a (QuaternionDataReader::_local_id))
   {
      result = dynamic_cast < QuaternionDataReader_ptr> (p);
      result->m_count++;
   }
   return result;
}

QuaternionDataReader_ptr QuaternionDataReader::_unchecked_narrow (DDS::Object_ptr p)
{
   QuaternionDataReader_ptr result;
   result = dynamic_cast < QuaternionDataReader_ptr> (p);
   result->m_count++;
   return result;
}

const char * QuaternionDataReaderView::_local_id = "IDL:QuaternionDataReaderView:1.0";

QuaternionDataReaderView_ptr QuaternionDataReaderView::_duplicate (QuaternionDataReaderView_ptr p)
{
   if (p) p->m_count++;
   return p;
}

DDS::Boolean QuaternionDataReaderView::_local_is_a (const char * _id)
{
   if (strcmp (_id, QuaternionDataReaderView::_local_id) == 0)
   {
      return true;
   }

   typedef DDS::DataReaderView NestedBase_1;

   if (NestedBase_1::_local_is_a (_id))
   {
      return true;
   }

   return false;
}

QuaternionDataReaderView_ptr QuaternionDataReaderView::_narrow (DDS::Object_ptr p)
{
   QuaternionDataReaderView_ptr result = NULL;
   if (p && p->_is_a (QuaternionDataReaderView::_local_id))
   {
      result = dynamic_cast < QuaternionDataReaderView_ptr> (p);
      result->m_count++;
   }
   return result;
}

QuaternionDataReaderView_ptr QuaternionDataReaderView::_unchecked_narrow (DDS::Object_ptr p)
{
   QuaternionDataReaderView_ptr result;
   result = dynamic_cast < QuaternionDataReaderView_ptr> (p);
   result->m_count++;
   return result;
}



